
import java.awt.event.MouseEvent;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;

import java.io.ObjectOutputStream;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author laurapein
 */
public class TerminGui extends javax.swing.JFrame {

    AppointmentModell aModel = new AppointmentModell();
    AppointmentDlg aDlg;
    /**
     * Creates new form TerminGui
     */
    public TerminGui() {
        initComponents();
        aDlg= new AppointmentDlg(new javax.swing.JFrame(),true);
        
        InputStream is;
        
        try{
           is= new FileInputStream(new File("appointments.bin"));
           ObjectInputStream ois= new ObjectInputStream(is);
           
           while(true){
               
               Appointment a= (Appointment) ois.readObject();
               aModel.addAppointment(a);
           }
           
        }
        catch(EOFException e){
            System.err.print("Fehler");
            
        }
        catch(IOException e){
            System.err.print("Fehler");
        }
        catch(ClassNotFoundException ex){
            System.err.print("Fehler");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pMenu = new javax.swing.JPopupMenu();
        jMenu1 = new javax.swing.JMenu();
        hinzufuegen = new javax.swing.JMenuItem();
        loeschen = new javax.swing.JMenuItem();
        aendern = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        liAusgabe = new javax.swing.JList<>();

        jMenu1.setText("Termine");

        hinzufuegen.setText("hinzufügen");
        hinzufuegen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onhinzufuegen(evt);
            }
        });
        jMenu1.add(hinzufuegen);

        loeschen.setText("löschen");
        loeschen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onLoeschen(evt);
            }
        });
        jMenu1.add(loeschen);

        aendern.setText("ändern");
        aendern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onAendern(evt);
            }
        });
        jMenu1.add(aendern);

        pMenu.add(jMenu1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                onSave(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Termine"));
        jPanel1.setLayout(new java.awt.BorderLayout());

        liAusgabe.setModel(aModel
        );
        liAusgabe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onClicked(evt);
            }
        });
        jScrollPane1.setViewportView(liAusgabe);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onClicked
        if(evt.getButton()== MouseEvent.BUTTON3){
            pMenu.show(this, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_onClicked

    private void onhinzufuegen(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onhinzufuegen
        //aDlg.setVisible(true);
        if(aDlg.ok){
             aDlg.setVisible(true);
        aModel.addAppointment(aDlg.getAppointment());
        liAusgabe.clearSelection();
        liAusgabe.repaint();
        }
        else{
            System.out.println("Fehler");
        }
       
        aDlg.clearAllTextFields();
    }//GEN-LAST:event_onhinzufuegen

    private void onLoeschen(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onLoeschen
        
        if(liAusgabe.getSelectedIndices().length>0){
            
            int[] index = liAusgabe.getSelectedIndices();
            
        for ( int i=0; i< index.length;i++){
            aModel.removeAppointment(i);
        }       
        liAusgabe.clearSelection();
        liAusgabe.repaint();
        }
        
    }//GEN-LAST:event_onLoeschen

    private void onAendern(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onAendern
        Appointment tmp;
        Appointment currentObject = (Appointment) aModel.getElementAt(liAusgabe.getSelectedIndex());
        int index= aModel.getIndexFromObject(currentObject);
        aDlg.setTextFieldTag(currentObject.getTag());
        aDlg.setTextFieldMonat(currentObject.getMonat());
        aDlg.setTextFieldJahr(currentObject.getJahr());
        aDlg.setTextFieldStunden(currentObject.getStunde());
        aDlg.setTextFieldMinuten(currentObject.getMinute());
        aDlg.setTextFieldText(currentObject.getText());
        aDlg.setVisible(true);
        
        tmp = new Appointment(aDlg.getTag(), aDlg.getMonat(),aDlg.getJahr(), aDlg.getStunden(),aDlg.getMinuten(), aDlg.getText());
        
        aModel.changeObject(tmp,index);
        liAusgabe.clearSelection();
        
        aDlg.clearAllTextFields();
    }//GEN-LAST:event_onAendern

    private void onSave(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_onSave
        
        
       try{
           FileOutputStream fos= new FileOutputStream("appointments.bin");
           ObjectOutputStream oos= new ObjectOutputStream(fos);
           
           
           for(int i=0; i< aModel.getSize(); i++){
               oos.writeObject(aModel.getElementAt(i));
           }
           oos.close();
           fos.close();
       }
       catch(IOException e){
           e.printStackTrace();
           
       }
    }//GEN-LAST:event_onSave

   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TerminGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TerminGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TerminGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TerminGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TerminGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aendern;
    private javax.swing.JMenuItem hinzufuegen;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Appointment> liAusgabe;
    private javax.swing.JMenuItem loeschen;
    private javax.swing.JPopupMenu pMenu;
    // End of variables declaration//GEN-END:variables
}
